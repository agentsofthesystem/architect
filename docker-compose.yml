version: "3.9"

# NOTE - Docker Compose is STRICTLY Meant for develop purpose.

x-common-variables: &common-variables
  SQL_DATABASE_USER: admin
  SQL_DATABASE_PASS: REPLACEME
  SQL_DATABASE_SERVER: mariadb-service
  SQL_DATABASE_NAME: app
  CELERY_BACKED_BY: SQS
  #AWS_ACCESS_KEY_ID: REPLACEME
  #AWS_SECRET_ACCESS_KEY: REPLACEME

services:

  web:
    profiles: ["dev", "deploy"]
    depends_on:
      - "tasks"
    image: architect:dev_test
    #restart: on-failure
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - "./application:/var/application"
    ports:
      - "3000:3000"
    environment:
      <<: *common-variables


  tasks:
    profiles: ["dev", "deploy"]
    image: architect:dev_test
    #restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - "./application:/var/application"
    command: "celery -A application.wsgi_worker_compose:WORKER worker --loglevel=debug --beat -l INFO -c 2 -Q realtime,celery"
    environment:
      <<: *common-variables

  redis-service:
    profiles: ["dev"]
    image: redis:7.2-alpine
    restart: always
    ports:
      - 6379:6379

  mariadb-service:
    profiles: ["dev"]
    image: mariadb:11
    restart: always
    ports:
      - 3306:3306
    environment:
      MARIADB_DATABASE: app
      MARIADB_USER: admin
      MARIADB_PASSWORD: REPLACEME
      MARIADB_ROOT_PASSWORD: REPLACEME  # Change Me!
    volumes:
      - mysql-data:/var/lib/mysql

  adminer:
    profiles: ["dev"]
    depends_on:
      - "mariadb-service"
    image: adminer:4.8.1-standalone
    restart: always
    ports:
      - 8080:8080

volumes:
  mysql-data:
