---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: primary-application
  labels:
    app: primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: primary
  template:
    metadata:
      labels:
        app: primary
    spec:

      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}

      initContainers:
      - name: wait-for-sql-server
        image: busybox
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mariadb-service 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']

      containers:
      # Main Application Container
      - name: main
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["gunicorn"]
        args: ["-w", "1", "--access-logfile", "-", "-b", ":3000", "-t", "30", "--reload", "application.wsgi:start_app(deploy_as='kubernetes')"]
        ports:
        - containerPort: 5000
          name: main-app-svc
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: DEBUG
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: ENV
        - name: CELERY_BROKER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: CELERY_BROKER
        - name: CELERY_BACKEND
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: CELERY_BACKEND
        - name: SQL_DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_USER
        - name: SQL_DATABASE_PASS
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_PASS
        - name: SQL_DATABASE_SERVER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_SERVER
        - name: SQL_DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_PORT

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-application
  labels:
    app: task
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task
  template:
    metadata:
      labels:
        app: task
    spec:

      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}

      initContainers:
      - name: wait-for-sql-server
        image: busybox
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mariadb-service 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']

      containers:
      # This is the Status Application
      - name: task
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["celery"]
        args: ["-A", "application.wsgi_worker_kubernetes:WORKER", "worker", "--beat", "-l", "INFO", "-c", "1"]
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: DEBUG
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: ENV
        - name: CELERY_BROKER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: CELERY_BROKER
        - name: CELERY_BACKEND
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: CELERY_BACKEND
        - name: SQL_DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_USER
        - name: SQL_DATABASE_PASS
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_PASS
        - name: SQL_DATABASE_SERVER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_SERVER
        - name: SQL_DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: SQL_DATABASE_PORT

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
    app.kubernetes.io/name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
          name: redis-cache-svc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  labels:
    app: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - name: mariadb
        image: mariadb:11
        ports:
        - containerPort: 3306
          name: mongo-db-svc
        env:
        - name: MARIADB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: MARIADB_DATABASE
        - name: MARIADB_USER
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: MARIADB_USER
        - name: MARIADB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: MARIADB_PASSWORD
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: k8s-environment
              key: MARIADB_ROOT_PASSWORD