"""Add Database Tables for Agent and Dedicated Server Monitoring.

Revision ID: database_v7
Revises:
Create Date: 2023-10-08 14:10:31.088339

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "database_v7"
down_revision = "database_v6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create Table for Monitor class
    op.create_table(
        "monitors",
        sa.Column("monitor_id", sa.Integer(), nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("monitor_type", sa.String(length=256), nullable=False),
        sa.Column("last_check", sa.DateTime(), nullable=True),
        sa.Column("next_check", sa.DateTime(), nullable=True),
        sa.Column("interval", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=256), nullable=True),
        sa.Column("has_fault", sa.Boolean(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("monitor_id"),
    )

    # Create Table for MonitorAttribute class
    op.create_table(
        "monitor_attributes",
        sa.Column("monitor_attribute_id", sa.Integer(), nullable=False),
        sa.Column("monitor_id", sa.Integer(), nullable=False),
        sa.Column("attribute_name", sa.String(length=256), nullable=False),
        sa.Column("attribute_value", sa.String(length=256), nullable=False),
        sa.PrimaryKeyConstraint("monitor_attribute_id"),
    )

    # Create Table for MonitorFault class
    op.create_table(
        "monitor_faults",
        sa.Column("monitor_fault_id", sa.Integer(), nullable=False),
        sa.Column("monitor_id", sa.Integer(), nullable=False),
        sa.Column("fault_time", sa.DateTime(), nullable=False),
        sa.Column("fault_description", sa.String(length=256), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("monitor_fault_id"),
    )

    # Create Foreign Key for Monitor and MonitorAttribute class tables
    op.create_foreign_key(
        op.f("fk_monitor_attributes_monitors_monitor_id"),
        "monitor_attributes",
        "monitors",
        ["monitor_id"],
        ["monitor_id"],
    )

    # Create Foreign Key for MonitorFault and Monitor class tables
    op.create_foreign_key(
        op.f("fk_monitor_faults_monitors_monitor_id"),
        "monitor_faults",
        "monitors",
        ["monitor_id"],
        ["monitor_id"],
    )

    # Create index for agent_id in Monitor class table
    op.create_index("ix_monitors_agent_id", "monitors", ["agent_id"], unique=False)

    # Create index for monitor_id in MonitorAttribute class table
    op.create_index(
        "ix_monitor_attributes_monitor_id", "monitor_attributes", ["monitor_id"], unique=False
    )

    # Create index for monitor_id in MonitorFault class table
    op.create_index("ix_monitor_faults_monitor_id", "monitor_faults", ["monitor_id"], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop index created in upgrade function
    op.drop_index("ix_monitor_faults_monitor_id")
    op.drop_index("ix_monitor_attributes_monitor_id")
    op.drop_index("ix_monitors_agent_id")

    # Drop Foreign Key created in upgrade function
    op.drop_constraint(
        op.f("fk_monitor_faults_monitors_monitor_id"), "monitor_faults", type_="foreignkey"
    )

    # Drop tables create in upgrade function
    op.drop_table("monitor_faults")
    op.drop_table("monitor_attributes")
    op.drop_table("monitors")
