"""Initial Migration.

Revision ID: database_v1
Revises:
Create Date: 2023-10-08 14:10:31.088339

"""
from alembic import op
from application.common.constants import AGENT_SMITH_DEFAULT_PORT, FriendRequestStates
from datetime import datetime
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "database_v2"
down_revision = "database_v1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # -----------------------------------------------------------------
    # AGENTS
    # -----------------------------------------------------------------
    op.create_table(
        "agents",
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False, default=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("hostname", sa.String(length=256), nullable=False),
        sa.Column("port", sa.Integer(), nullable=False, default=AGENT_SMITH_DEFAULT_PORT),
        sa.Column("access_token", sa.String(length=256), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("agent_id"),
    )

    op.create_foreign_key(
        op.f("fk_agents_owner_user_id"),
        "agents",
        "users",
        ["owner_id"],
        ["user_id"],
    )

    # -----------------------------------------------------------------
    # GROUPS
    # -----------------------------------------------------------------
    op.create_table(
        "groups",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False, default=True),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("creation_date", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("group_id"),
    )

    op.create_foreign_key(
        op.f("fk_groups_owner_user_id"),
        "groups",
        "users",
        ["owner_id"],
        ["user_id"],
    )

    # -----------------------------------------------------------------
    # FRIENDS
    # -----------------------------------------------------------------
    op.create_table(
        "friends",
        sa.Column("friend_id", sa.Integer(), nullable=False),
        sa.Column("creation_date", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column("initiator_id", sa.Integer(), nullable=False),
        sa.Column("receiver_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("friend_id"),
    )

    op.create_foreign_key(
        op.f("fk_friends_users_initiator_id"),
        "friends",
        "users",
        ["initiator_id"],
        ["user_id"],
    )

    op.create_foreign_key(
        op.f("fk_friends_users_receiver_id"),
        "friends",
        "users",
        ["receiver_id"],
        ["user_id"],
    )

    # -----------------------------------------------------------------
    # FRIEND REQUESTS
    # -----------------------------------------------------------------
    op.create_table(
        "friend_requests",
        sa.Column("request_id", sa.Integer(), nullable=False),
        sa.Column("state", sa.Integer(), nullable=False, default=FriendRequestStates.PENDING.value),
        sa.Column("sender_id", sa.Integer(), nullable=False),
        sa.Column("recipient_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.PrimaryKeyConstraint("request_id"),
    )

    op.create_foreign_key(
        op.f("fk_friend_requests_sender_user_id"),
        "friend_requests",
        "users",
        ["sender_id"],
        ["user_id"],
    )
    op.create_foreign_key(
        op.f("fk_friend_requests_recipient_user_id"),
        "friend_requests",
        "users",
        ["recipient_id"],
        ["user_id"],
    )

    # -----------------------------------------------------------------
    # GROUP MEMBERS
    # -----------------------------------------------------------------
    op.create_table(
        "group_members",
        sa.Column("group_member_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False, default=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("group_member_id"),
    )

    op.create_foreign_key(
        op.f("fk_group_members_groups_group_id"),
        "group_members",
        "groups",
        ["group_id"],
        ["group_id"],
    )

    op.create_foreign_key(
        op.f("fk_group_members_groups_member_id"),
        "group_members",
        "users",
        ["member_id"],
        ["user_id"],
    )

    # -----------------------------------------------------------------
    # AGENT GROUP MEMBERS
    # -----------------------------------------------------------------
    op.create_table(
        "agent_group_members",
        sa.Column("agent_group_member_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False, default=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("group_member_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("agent_group_member_id"),
    )

    op.create_foreign_key(
        op.f("fk_agent_group_members_agents_agent_id"),
        "agent_group_members",
        "agents",
        ["agent_id"],
        ["agent_id"],
    )

    op.create_foreign_key(
        op.f("fk_agent_group_members_group_member_id"),
        "agent_group_members",
        "groups",
        ["group_member_id"],
        ["group_id"],
    )

    # -----------------------------------------------------------------
    # AGENT FRIEND MEMBERS
    # -----------------------------------------------------------------
    op.create_table(
        "agent_friend_members",
        sa.Column("agent_friend_member_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False, default=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("friend_member_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("agent_friend_member_id"),
    )

    op.create_foreign_key(
        op.f("fk_agent_friend_members_agents_agent_id"),
        "agent_friend_members",
        "agents",
        ["agent_id"],
        ["agent_id"],
    )

    op.create_foreign_key(
        op.f("fk_agent_friend_members_friend_member_id"),
        "agent_friend_members",
        "users",
        ["friend_member_id"],
        ["user_id"],
    )

    # -----------------------------------------------------------------
    # INDEXES
    # -----------------------------------------------------------------
    op.create_index("ix_agents_agent_id", "agents", ["agent_id"], unique=False)
    op.create_index("ix_groups_group_id", "groups", ["group_id"], unique=False)
    op.create_index(
        "ix_group_members_group_member_id", "group_members", ["group_member_id"], unique=False
    )
    op.create_index("ix_friends_friend_id", "friends", ["friend_id"], unique=False)
    op.create_index(
        "ix_friend_requests_request_id", "friend_requests", ["request_id"], unique=False
    )
    op.create_index(
        "ix_agent_group_members_id", "agent_group_members", ["agent_group_member_id"], unique=False
    )
    op.create_index(
        "ix_agent_friend_members_id",
        "agent_friend_members",
        ["agent_friend_member_id"],
        unique=False,
    )

    op.add_column("users", sa.Column("friend_code", sa.String(length=256)))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_agents_agent_id")
    op.drop_index("ix_groups_group_id")
    op.drop_index("ix_group_members_group_member_id")
    op.drop_index("ix_friends_friend_id")
    op.drop_index("ix_agent_group_members_id")
    op.drop_index("ix_agent_friend_members_id")

    op.drop_constraint("fk_agents_owner_user_id", "agents", type_="foreignkey")
    op.drop_constraint("fk_groups_owner_user_id", "groups", type_="foreignkey")
    op.drop_constraint("fk_group_members_groups_group_id", "group_members", type_="foreignkey")
    op.drop_constraint("fk_group_members_groups_member_id", "group_members", type_="foreignkey")
    op.drop_constraint("fk_friends_users_friends_with_id", "friends", type_="foreignkey")
    op.drop_constraint("fk_friends_users_friends_with_id", "friends", type_="foreignkey")
    op.drop_constraint("fk_friend_requests_sender_user_id", "friend_requests", type_="foreignkey")
    op.drop_constraint(
        "fk_friend_requests_recipient_user_id", "friend_requests", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_agent_group_members_agents_agent_id", "agent_group_members", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_agent_group_members_group_member_id", "agent_group_members", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_agent_friend_members_agents_agent_id", "agent_friend_members", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_agent_friend_members_friend_member_id", "agent_friend_members", type_="foreignkey"
    )

    op.drop_table("agents")
    op.drop_table("groups")
    op.drop_table("group_members")
    op.drop_table("friends")
    op.drop_table("agent_group_members")
    op.drop_table("agent_friend_members")

    op.drop_column("users", "friend_code")
    # ### end Alembic commands ###
